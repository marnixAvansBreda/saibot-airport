// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pitstop.FlightPlanningManagementAPI.DataAccess;

namespace Pitstop.FlightPlanningManagementAPI.Migrations
{
    [DbContext(typeof(FlightPlanningManagementDBContext))]
    partial class FlightPlanningManagementDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pitstop.FlightPlanningManagementAPI.Domain.Airline", b =>
                {
                    b.Property<string>("AirlineId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("AirlineId");

                    b.ToTable("Airline");
                });

            modelBuilder.Entity("Pitstop.FlightPlanningManagementAPI.Domain.Gate", b =>
                {
                    b.Property<string>("GateId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("GateId");

                    b.ToTable("Gate");
                });

            modelBuilder.Entity("Pitstop.FlightPlanningManagementAPI.Model.FlightPlanning", b =>
                {
                    b.Property<string>("FlightPlanningId")
                        .ValueGeneratedOnAdd();

                    b.HasKey("FlightPlanningId");

                    b.ToTable("FlightPlanning");
                });

            modelBuilder.Entity("Pitstop.FlightPlanningManagementAPI.Model.ScheduledFlight", b =>
                {
                    b.Property<string>("ScheduledFlightId");

                    b.Property<string>("PlanningId");

                    b.Property<string>("AirlineId");

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("Destination");

                    b.Property<string>("FlightPlanningId");

                    b.Property<string>("GateId");

                    b.HasKey("ScheduledFlightId", "PlanningId");

                    b.HasIndex("AirlineId");

                    b.HasIndex("FlightPlanningId");

                    b.HasIndex("GateId");

                    b.ToTable("ScheduledFlight");
                });

            modelBuilder.Entity("Pitstop.FlightPlanningManagementAPI.Model.ScheduledFlight", b =>
                {
                    b.HasOne("Pitstop.FlightPlanningManagementAPI.Domain.Airline", "Airline")
                        .WithMany()
                        .HasForeignKey("AirlineId");

                    b.HasOne("Pitstop.FlightPlanningManagementAPI.Model.FlightPlanning")
                        .WithMany("Flights")
                        .HasForeignKey("FlightPlanningId");

                    b.HasOne("Pitstop.FlightPlanningManagementAPI.Domain.Gate", "Gate")
                        .WithMany()
                        .HasForeignKey("GateId");
                });
#pragma warning restore 612, 618
        }
    }
}
